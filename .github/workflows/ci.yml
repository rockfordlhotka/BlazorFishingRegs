name: CI Build

on:
  # Trigger on pull request events
  pull_request:
    branches: [ main, master, develop ]
    types: [ opened, synchronize, reopened ]
  
  # Trigger when PR is merged (push to main/master)
  push:
    branches: [ main, master, develop ]
  
  # Allow manual trigger
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: FishingRegs2025!
          POSTGRES_DB: FishingRegsDB
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Shallow clones should be disabled for better analysis
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    
    - name: Restore dependencies
      run: dotnet restore src/FishingRegs.sln
      
    - name: Build solution
      run: dotnet build src/FishingRegs.sln --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test src/FishingRegs.sln --no-build --configuration Release --verbosity normal --logger trx --results-directory TestResults/
      
    # Upload test results
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: TestResults/
        
    # Optional: Add code coverage if you have tests
    # - name: Generate code coverage
    #   run: dotnet test src/ --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory TestResults/
    #   
    # - name: Upload coverage to Codecov
    #   uses: codecov/codecov-action@v3
    #   with:
    #     directory: TestResults/
    #     fail_ci_if_error: true

  # Optional: Add security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Update workloads
      run: dotnet workload update
      
    - name: Install Aspire workload
      run: dotnet workload install aspire
      
    - name: Restore workloads
      run: dotnet workload restore
        
    - name: Restore dependencies
      run: dotnet restore src/FishingRegs.sln
      
    - name: Run security audit
      run: dotnet list src/FishingRegs.sln package --vulnerable --include-transitive
      
  # Optional: Add build artifacts
  artifacts:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Update workloads
      run: dotnet workload update
      
    - name: Install Aspire workload
      run: dotnet workload install aspire
      
    - name: Restore workloads
      run: dotnet workload restore
        
    - name: Restore dependencies
      run: dotnet restore src/FishingRegs.sln
      
    - name: Publish application
      run: dotnet publish src/FishingRegs.AppHost/FishingRegs.AppHost.csproj --configuration Release --output ./publish/
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ./publish/
        retention-days: 30
